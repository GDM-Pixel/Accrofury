---
// Accordion.astro
const { items, extraClass = "" } = Astro.props;
---

<div class={`accordion-wrapper ${extraClass}`}>
	{
		//@ts-ignore
		items.map((item, index) => (
			//@ts-ignore
			<div key={index}>
				<button aria-label={item.title}
					class={`accordiontarifs ${
						item.isopen ? "active" : ""
					}`}>
					
					<span class="self-start">{item.title}</span><div class="pointille"></div><span class="price">{item.price}</span>
					<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 0C18.6094 0 24 5.39062 24 12C24 18.6562 18.6094 24 12 24C5.34375 24 0 18.6562 0 12C0 5.39062 5.34375 0 12 0ZM16.7812 13.0781C17.0625 12.7969 17.25 12.4219 17.25 12C17.25 11.625 17.0625 11.25 16.7812 10.9688L11.5312 5.71875C10.9688 5.10938 9.98438 5.10938 9.42188 5.71875C8.8125 6.28125 8.8125 7.26562 9.42188 7.82812L13.5938 12L9.42188 16.2188C8.8125 16.7812 8.8125 17.7656 9.42188 18.3281C9.98438 18.9375 10.9688 18.9375 11.5312 18.3281L16.7812 13.0781Z" fill="#DB9A38"/>
</svg>

				</button>
				<div class="paneltarifs" data-isopen={item.isopen ? "true" : "false"}>
					<div class="accordiontarifs-content" set:html={item.answer} />
				</div>
			</div>
		))
	}
</div>

<script>
	function initAccordion() {
		const allAccordionsGroups = document.querySelectorAll(".accordion-wrapper");
		allAccordionsGroups.forEach((wrapper) => {
			const accordions = wrapper.querySelectorAll(".accordiontarifs");
			const panels = wrapper.querySelectorAll(".paneltarifs");

			accordions.forEach((accordionButton, index) => {
				const panel = panels[index];
				const isopen = panel.getAttribute("data-isopen") === "true";

				// Initialiser le max-height pour les éléments ouverts par défaut
				if (isopen) {
					accordionButton.classList.add("tarifsactive");
					//@ts-ignore
					panel.style.maxHeight = panel.scrollHeight + "px";
				}

				accordionButton.addEventListener("click", () => {
					const isActive = accordionButton.classList.contains("tarifsactive");

					// Fermer les autres panneaux dans le même groupe
					accordions.forEach((otherAccordion, idx) => {
						const otherPanel = panels[idx];
						if (otherAccordion !== accordionButton) {
							otherAccordion.classList.remove("tarifsactive");
							//@ts-ignore
							otherPanel.style.maxHeight = null;
						}
					});

					// Basculer le panneau actuel
					if (!isActive) {
						accordionButton.classList.add("tarifsactive");
						//@ts-ignore
						panel.style.maxHeight = panel.scrollHeight + "px";
					} else {
						accordionButton.classList.remove("tarifsactive");
						//@ts-ignore
						panel.style.maxHeight = null;
					}
				});
			});
		});
	}
	initAccordion();
	document.addEventListener("astro:content-ready", initAccordion);
	document.addEventListener("astro:page-load", initAccordion);
</script>

<style lang="scss" is:global>
	.pointille {@apply mb-2 flex-auto border-b-2 border-dotted border-[#F7EBC8];}
	/* Style de l'accordéon avec effet de glissement */
	.accordiontarifs {
		@apply  flex gap-3 items-end w-full transition-all duration-300 ease-in-out  text-left px-2 py-2 cursor-pointer text-xl font-lemon text-white;
	}

	.accordiontarifs svg {
		@apply fill-harvestgold transition-all duration-500 ease-in-out rotate-0 flex-shrink-0;
	}
	
	.accordiontarifs.tarifsactive svg {
		@apply fill-harvestgold transition-all duration-500 ease-in-out rotate-90;
	}

	.tarifsactive {
		color: white;
		@apply py-4 bg-transparent transition-all duration-300 ease-in-out ;
	}
	.accordiontarifs:hover {
		@apply transition-all duration-300 ease-in-out text-[#ffce2c];
	}


	.paneltarifs {
    @apply  pl-4 max-h-0 overflow-hidden transition-all duration-300  bg-black bg-opacity-50 text-[#F7EBC8] text-xl;
	p {
		@apply text-xl leading-7;
	}
	.small {@apply text-base;}
	}

	.accordiontarifs-content {@apply bg-black bg-opacity-10;
		padding: 10px 18px 15px 0px; 
		
		ul li {@apply mb-6}
	}
</style>
